* [Merge Sort Algorithm]{/ MergeSort.java}
  - Merge Sort is a *recursive* algorithm that merges two sorted arrays into one sorted array.
  - It divides the array into two halves, sorts the two halves, and then merges the two halves.
  - It has a time complexity of O(n log n), Quasilinear time complexity.
  - Space complexity is O(n).

  @code java
  private static void mergeSort(int[] array) {
    int length = array.length;
    if (length <= 1) {
      return;
    }
    int middle = length / 2;
    int[] leftArray = new int[middle];
    int[] rightArray = new int[length - middle];

    System.arraycopy(array, 0, leftArray, 0, middle);
    System.arraycopy(array, middle, rightArray, 0, length - middle);

    mergeSort(leftArray);
    mergeSort(rightArray);
    merge(leftArray, rightArray, array);
  }
  private static void merge(int[] leftArray, int[] rightArray, int[] array) {
    int leftSize = array.length / 2;
    int rightSize = array.length - leftSize;
    int i = 0, l = 0, r = 0;

    while (l < leftSize && r < rightSize) {
      if (leftArray[l] < rightArray[r]) {
        array[i++] = leftArray[l++];
      } else {
        array[i++] = rightArray[r++];
      }
    }

    while (l < leftSize) {
      array[i++] = leftArray[l++];
    }

    while (r < rightSize) {
      array[i++] = rightArray[r++];
    }
  }
  @end
